server.port=8080
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.sql.init.platform=mysql
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${DDL_TYPE}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

###konfigurasi untuk koneksi MySQL
#spring.sql.init.platform=mysql
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##
###sesuaikan NAMA_DATABASE dengan nama database anda
##spring.datasource.url=jdbc:mysql://localhost:3306/bepropen?useSSL=false&autoReconnect=true
##
###sesuaikan dengan NAMA dan PASSWORD mysql anda
##spring.datasource.username=root
##spring.datasource.password=
##
###optimize query untuk db MySQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
##spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
##
###pembuatan database (create || create-drop || validate || update)
##spring.jpa.hibernate.ddl-auto=update
##
#server.port=8080
#
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect